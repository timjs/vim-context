" Vim syntax file
" Language:         ConTeXt typesetting engine
" Maintainer:       Tim Steenvoorden <tim.steenvoorden@gmail.com>
" Latest Revision:  2012-01-03

" Initialize Syntaxfile: {{{1
" ======================

if exists("b:current_syntax")
  finish
endif

scriptencoding utf-8

let s:cpo_save = &cpo
set cpo&vim

setlocal fdm=syntax
setlocal isk-=_

" Syntax Definitions:
" ===================

"FIXME
syn cluster contextDocumentGroup contains=contextComment

" Commands: {{{1
" ---------

" We just match \...alphabetic... Sometimes @ and ! are used inside commands, but this is only supported inside \unprotect'ed environments.
syn match   contextCommand    display '\\\a\+'

syn match   contextBlock      display '\\\%(start\|stop\)\a*'

syn match   contextCondition  display '\\doif\a*' 

"syn match   contextDefine     display '\\[egx]\%(def\|let\)'
syn match   contextDefine     display '\\\%(define\|set\|get\)\a*'
syn match   contextDefine     display '\\\%(start\|stop\)texdefinition\>'
syn match   contextSetup      display '\\\%(setup\|use\|enable\|disable\|show\)\a*'

"FIXME contextInclude --> contextInput omdat dat in TeX zo heet?
syn match   contextInclude    display '^\s*\\\%(component\|product\|project\|environment\|input\)\>.*$'

" Sections: {{{1
" ---------

"FIXME: contextInclude --> contextStructure duidelijker?
"FIXME: transparant maken en appart highlighten?
"FIXME: alleen gebruiken voor sync?
syn region  contextDocument   matchgroup=contextInclude start='^\\starttext$'                end='^\\stoptext$'        contains=TOP
syn region  contextDocument   matchgroup=contextInclude start='^\\startcomponent\>.*$'       end='^\\stopcomponent$'   contains=TOP
syn region  contextDocument   matchgroup=contextInclude start='^\\startproduct\>.*$'         end='^\\stopproduct$'     contains=TOP
syn region  contextDocument   matchgroup=contextInclude start='^\\startproject\>.*$'         end='^\\stopproject$'     contains=TOP
syn region  contextDocument   matchgroup=contextInclude start='^\\startenvironment\>.*$'     end='^\\stopenvironment$' contains=TOP

syn region  contextPart       matchgroup=contextHead    start='\\startpart\>'                end='\\stoppart\>'                                                                                                                fold containedin=contextDocument                contains=TOP
syn region  contextPart       matchgroup=contextHead    start='\\part\>'                     end='\ze\\\%(part\|\stop\%(text\|component\|product\|project\|environment\)\>\)'                                                  fold containedin=contextDocument                contains=TOP

syn region  contextChapter    matchgroup=contextHead    start='\\startchapter\>'             end='\\stopchapter\>'                                                                                                             fold containedin=contextDocument,contextPart    contains=TOP
syn region  contextChapter    matchgroup=contextHead    start='\\starttitle\>'               end='\\stoptitle\>'                                                                                                               fold containedin=contextDocument,contextPart    contains=TOP
syn region  contextChapter    matchgroup=contextHead    start='\\\%(chapter\|title\)\>'      end='\ze\\\%(chapter\|title\|part\|\stop\%(text\|component\|product\|project\|environment\)\>\)'                                  fold containedin=contextDocument,contextPart    contains=TOP

syn region  contextSection    matchgroup=contextHead    start='\\startsection\>'             end='\\stopsection\>'                                                                                                             fold containedin=contextDocument,contextChapter contains=TOP
syn region  contextSection    matchgroup=contextHead    start='\\startsubject\>'             end='\\stopsubject\>'                                                                                                             fold containedin=contextDocument,contextChapter contains=TOP
syn region  contextSection    matchgroup=contextHead    start='\\\%(section\|subject\)\>'    end='\ze\\\%(section\|subject\|chapter\|title\|part\|\stop\%(text\|component\|product\|project\|environment\)\>\)'                fold containedin=contextDocument,contextChapter contains=TOP

syn region  contextSubsection matchgroup=contextHead    start='\\startsubsection\>'          end='\\stopsubsection\>'                                                                                                          fold containedin=contextDocument,contextSection contains=TOP
syn region  contextSubsection matchgroup=contextHead    start='\\startsubsubject\>'          end='\\stopsubsubject\>'                                                                                                          fold containedin=contextDocument,contextSection contains=TOP
syn region  contextSubsection matchgroup=contextHead    start='\\sub\%(section\|subject\)\>' end='\ze\\\%(\%(sub\)\?\%(section\|subject\)\|chapter\|title\|part\|\stop\%(text\|component\|product\|project\|environment\)\>\)' fold containedin=contextDocument,contextSection contains=TOP

" We don't fold anthing lower than sub(section|subject), just highlight it.
"FIXME: --> contextSubsubsection geeft geen clash met folds?
syn match   contextHead       display '\\\%(sub\)\+subsection\>' containedin=contextSubsection
syn match   contextHead       display '\\\%(sub\)\+subsubject\>' containedin=contextSubsection

" Fonts And Styles: {{{1
" -----------------

syn match   contextFont       display '\\\%(rm\|ss\|tt\|hw\|cg\|mf\)\>'

syn match   contextStyle      display '\\\%(em\|tf\|b[fsi]\|s[cl]\|it\|os\)\%(xx\|[xabcd]\)\?\>'
syn match   contextStyle      display '\\\%(vi\{1,3}\|ix\|xi\{0,2}\)\>'

syn match   contextCapital    display '\\\%(cap\|Cap\|CAP\|Caps\|nocap\)\>'
syn match   contextCapital    display '\\\%(Word\|WORD\|Words\|WORDS\)\>'
"FIXME: what is this?
"syn match   contextCapital    display '\\\%(character\|Character\)s\?\>'

" Specials: {{{1
" ---------

syn match   contextDelimiter  display '\\\@![][{}]'

syn match   contextDimension  display '\<[+-]\?\%(\d\+\%(\.\d\+\)\?\|\.\d\+\)\%(p[tc]\|in\|bp\|cc]\|[cm]m\|dd\|sp\|e[mx]\)\>'
syn match   contextNumber     display '\<[+-]\?\%(\d\+\%(\.\d\+\)\?\|\.\d\+\)\>' contained

syn match   contextEscaped    display '\\[%#~&$^_\{} \n]'
"syn match   contextEscaped    display '\\[`'"]'

syn match   contextSpecial    display '\\\%(par\|crlf\)\>'
syn match   contextSpecial    display '\\\@!\%(~\|&\|\^\|_\|-\{2,3}\)'

"FIXME
syn match   contextParameter  display '\\\@!#\d\+'

"TODO errors: #, ^, _
"TODO hyphens?: ||

"FIXME
syn region  contextArgument   display matchgroup=contextDelimiter keepend start='\[' end='\]' contains=contextLabel,contextCommand,contextDimension,contextNumber

syn match   contextLabel      display '\a\+:[0-9a-zA-Z: ]\+' contained

" Comments: {{{1
" ---------

syn keyword contextTodo       TODO FIXME NOTE XXX

syn match   contextComment    display '\\\@!%.*$'    contains=contextTodo
syn match   contextComment    display '^%[CDM]\s.*$' contains=TOP,contextComment contains=@Spell

syn region  contextHiding     matchgroup=contextBlock keepend start='\\starthiding\>' end='\\stophiding\>'

" Math: {{{1
" -----

"FIXME
syn cluster contextMathGroup  contains=contextComment,contextCommand,contextBlock,contextDelimiter,contextEscaped,contextSpecial,contextFont,contextStyle


syn region  contextMath       display matchgroup=contextDelimiter keepend start='\$'                       end='\$'                 contains=contextMathText,@contextMathGroup
syn region  contextMath       display matchgroup=contextCommand   keepend start='\\math\%(ematics\)\?{'    end='}'                  contains=contextMathText,@contextMathGroup

syn region  contextMath               matchgroup=contextDelimiter keepend start='\$\$'                     end='\$\$'               contains=contextMathText,@contextMathGroup
syn region  contextMath               matchgroup=contextBlock     keepend start='\\start\z(\a*\)formula\>' end='\\stop\z1formula\>' contains=contextMathText,@contextMathGroup

syn region  contextMathText   display matchgroup=contextCommand   keepend start='\\\%(inter\)\?text{'      end='}'        contained contains=contextMath,@contextMathGroup

" Math Concealment: {{{1
" ~~~~~~~~~~~~~~~~~
"
" Many symbols by Bj√∂rn Winckler, additions by Tim Steenvoorden.

if has('conceal') && &enc == 'utf-8'

  " We will define the unbraced variants seperatly for each symbol in the function ContextConcealScript.
  syn region contextSuperscript matchgroup=contextDelimiter start='\^{' end='}' concealends contained containedin=contextMath contains=contextSuperscript,contextSubscript,contextSuperscripts,contextCommand
  syn region contextSubscript   matchgroup=contextDelimiter start='_{'  end='}' concealends contained containedin=contextMath contains=contextSuperscript,contextSubscript,contextSubscripts,contextCommand

  "syn cluster contextMathGroup add=contextSuperscipt,contextSubscript,contextMathSymbol

  fun! s:ContextConcealSymbol(pattern, replacement)
    exe 'syn match contextMathSymbol "'.a:pattern.'" contained containedin=contextMath conceal cchar='.a:replacement
  endfun

  fun! s:ContextConcealScript(pattern, superscript, subscript)
    exe 'syn match contextSuperscript "\^'.a:pattern.'" contained containedin=contextMath conceal cchar='.a:superscript
    exe 'syn match contextSubscript    "_'.a:pattern.'" contained containedin=contextMath conceal cchar='.a:subscript
    exe 'syn match contextSuperscripts  "'.a:pattern.'" contained                         conceal cchar='.a:superscript.' nextgroup=contextSuperscripts'
    exe 'syn match contextSubscripts    "'.a:pattern.'" contained                         conceal cchar='.a:subscript.'   nextgroup=contextSubscripts'
  endfun

  " Math Symbols: {{{2
  let s:contextMathSymbols=[
    \ ['angle'              , '‚à†'],
    \ ['approx'             , '‚âà'],
    \ ['ast'                , '‚àó'],
    \ ['asymp'              , '‚âç'],
    \ ['backepsilon'        , '‚àç'],
    \ ['backsimeq'          , '‚âÉ'],
    \ ['barwedge'           , '‚äº'],
    \ ['because'            , '‚àµ'],
    \ ['between'            , '‚â¨'],
    \ ['bigcap'             , '‚à©'],
    \ ['bigcup'             , '‚à™'],
    \ ['bigodot'            , '‚äô'],
    \ ['bigoplus'           , '‚äï'],
    \ ['bigotimes'          , '‚äó'],
    \ ['bigsqcup'           , '‚äî'],
    \ ['bigtriangledown'    , '‚àá'],
    \ ['bigvee'             , '‚ãÅ'],
    \ ['bigwedge'           , '‚ãÄ'],
    \ ['blacksquare'        , '‚àé'],
    \ ['bot'                , '‚ä•'],
    \ ['boxdot'             , '‚ä°'],
    \ ['boxminus'           , '‚äü'],
    \ ['boxplus'            , '‚äû'],
    \ ['boxtimes'           , '‚ä†'],
    \ ['bumpeq'             , '‚âè'],
    \ ['Bumpeq'             , '‚âé'],
    \ ['cap'                , '‚à©'],
    \ ['Cap'                , '‚ãí'],
    \ ['cdot'               , '¬∑'],
    \ ['cdots'              , '‚ãØ'],
    \ ['circ'               , '‚àò'],
    \ ['circeq'             , '‚âó'],
    \ ['circlearrowleft'    , '‚Ü∫'],
    \ ['circlearrowright'   , '‚Üª'],
    \ ['circledast'         , '‚äõ'],
    \ ['circledcirc'        , '‚äö'],
    \ ['complement'         , '‚àÅ'],
    \ ['cong'               , '‚âÖ'],
    \ ['coprod'             , '‚àê'],
    \ ['cup'                , '‚à™'],
    \ ['Cup'                , '‚ãì'],
    \ ['curlyeqprec'        , '‚ãû'],
    \ ['curlyeqsucc'        , '‚ãü'],
    \ ['curlyvee'           , '‚ãé'],
    \ ['curlywedge'         , '‚ãè'],
    \ ['dashv'              , '‚ä£'],
    \ ['diamond'            , '‚ãÑ'],
    \ ['div'                , '√∑'],
    \ ['doteq'              , '‚âê'],
    \ ['doteqdot'           , '‚âë'],
    \ ['dotplus'            , '‚àî'],
    \ ['dotsb'              , '‚ãØ'],
    \ ['dotsc'              , '‚Ä¶'],
    \ ['dots'               , '‚Ä¶'],
    \ ['dotsi'              , '‚ãØ'],
    \ ['dotso'              , '‚Ä¶'],
    \ ['doublebarwedge'     , '‚©û'],
    \ ['downarrow'          , '‚Üì'],
    \ ['Downarrow'          , '‚áì'],
    \ ['emptyset'           , '‚àÖ'],
    \ ['eqcirc'             , '‚âñ'],
    \ ['eqsim'              , '‚âÇ'],
    \ ['eqslantgtr'         , '‚™ñ'],
    \ ['eqslantless'        , '‚™ï'],
    \ ['equiv'              , '‚â°'],
    \ ['exists'             , '‚àÉ'],
    \ ['fallingdotseq'      , '‚âí'],
    \ ['forall'             , '‚àÄ'],
    \ ['ge'                 , '‚â•'],
    \ ['geq'                , '‚â•'],
    \ ['geqq'               , '‚âß'],
    \ ['gets'               , '‚Üê'],
    \ ['gg'                 , '‚â´'],
    \ ['gneqq'              , '‚â©'],
    \ ['gtrdot'             , '‚ãó'],
    \ ['gtreqless'          , '‚ãõ'],
    \ ['gtrless'            , '‚â∑'],
    \ ['gtrsim'             , '‚â≥'],
    \ ['hookleftarrow'      , '‚Ü©'],
    \ ['hookrightarrow'     , '‚Ü™'],
    \ ['iiint'              , '‚à≠'],
    \ ['iint'               , '‚à¨'],
    \ ['Im'                 , '‚Ñë'],
    \ ['in'                 , '‚àà'],
    \ ['infty'              , '‚àû'],
    \ ['int'                , '‚à´'],
    \ ['lceil'              , '‚åà'],
    \ ['ldots'              , '‚Ä¶'],
    \ ['le'                 , '‚â§'],
    \ ['leftarrow'          , '‚üµ'],
    \ ['Leftarrow'          , '‚ü∏'],
    \ ['leftarrowtail'      , '‚Ü¢'],
    \ ['left('              , '('],
    \ ['left\['             , '['],
    \ ['left\\{'            , '{'],
    \ ['Leftrightarrow'     , '‚áî'],
    \ ['leftrightsquigarrow', '‚Ü≠'],
    \ ['leftthreetimes'     , '‚ãã'],
    \ ['leq'                , '‚â§'],
    \ ['leqq'               , '‚â¶'],
    \ ['lessdot'            , '‚ãñ'],
    \ ['lesseqgtr'          , '‚ãö'],
    \ ['lesssim'            , '‚â≤'],
    \ ['lfloor'             , '‚åä'],
    \ ['ll'                 , '‚â™'],
    \ ['lneqq'              , '‚â®'],
    \ ['ltimes'             , '‚ãâ'],
    \ ['mapsto'             , '‚Ü¶'],
    \ ['measuredangle'      , '‚à°'],
    \ ['mid'                , '‚à£'],
    \ ['mp'                 , '‚àì'],
    \ ['nabla'              , '‚àá'],
    \ ['ncong'              , '‚âá'],
    \ ['nearrow'            , '‚Üó'],
    \ ['ne'                 , '‚â†'],
    \ ['neg'                , '¬¨'],
    \ ['neq'                , '‚â†'],
    \ ['nexists'            , '‚àÑ'],
    \ ['ngeq'               , '‚â±'],
    \ ['ngeqq'              , '‚â±'],
    \ ['ngtr'               , '‚âØ'],
    \ ['ni'                 , '‚àã'],
    \ ['nleftarrow'         , '‚Üö'],
    \ ['nLeftarrow'         , '‚áç'],
    \ ['nLeftrightarrow'    , '‚áé'],
    \ ['nleq'               , '‚â∞'],
    \ ['nleqq'              , '‚â∞'],
    \ ['nless'              , '‚âÆ'],
    \ ['nmid'               , '‚à§'],
    \ ['notin'              , '‚àâ'],
    \ ['nprec'              , '‚äÄ'],
    \ ['nrightarrow'        , '‚Üõ'],
    \ ['nRightarrow'        , '‚áè'],
    \ ['nsim'               , '‚âÅ'],
    \ ['nsucc'              , '‚äÅ'],
    \ ['ntriangleleft'      , '‚ã™'],
    \ ['ntrianglelefteq'    , '‚ã¨'],
    \ ['ntriangleright'     , '‚ã´'],
    \ ['ntrianglerighteq'   , '‚ã≠'],
    \ ['nvdash'             , '‚ä¨'],
    \ ['nvDash'             , '‚ä≠'],
    \ ['nVdash'             , '‚äÆ'],
    \ ['nwarrow'            , '‚Üñ'],
    \ ['odot'               , '‚äô'],
    \ ['oint'               , '‚àÆ'],
    \ ['ominus'             , '‚äñ'],
    \ ['oplus'              , '‚äï'],
    \ ['oslash'             , '‚äò'],
    \ ['otimes'             , '‚äó'],
    \ ['owns'               , '‚àã'],
    \ ['partial'            , '‚àÇ'],
    \ ['perp'               , '‚ä•'],
    \ ['pitchfork'          , '‚ãî'],
    \ ['pm'                 , '¬±'],
    \ ['precapprox'         , '‚™∑'],
    \ ['prec'               , '‚â∫'],
    \ ['preccurlyeq'        , '‚âº'],
    \ ['preceq'             , '‚™Ø'],
    \ ['precnapprox'        , '‚™π'],
    \ ['precneqq'           , '‚™µ'],
    \ ['precsim'            , '‚âæ'],
    \ ['prod'               , '‚àè'],
    \ ['propto'             , '‚àù'],
    \ ['rceil'              , '‚åâ'],
    \ ['Re'                 , '‚Ñú'],
    \ ['rfloor'             , '‚åã'],
    \ ['rightarrow'         , '‚ü∂'],
    \ ['Rightarrow'         , '‚üπ'],
    \ ['rightarrowtail'     , '‚Ü£'],
    \ ['right)'             , ')'],
    \ ['right]'             , ']'],
    \ ['right\\}'           , '}'],
    \ ['rightsquigarrow'    , '‚Üù'],
    \ ['rightthreetimes'    , '‚ãå'],
    \ ['risingdotseq'       , '‚âì'],
    \ ['rtimes'             , '‚ãä'],
    \ ['searrow'            , '‚Üò'],
    \ ['setminus'           , '‚àñ'],
    \ ['sim'                , '‚àº'],
    \ ['sphericalangle'     , '‚à¢'],
    \ ['sqcap'              , '‚äì'],
    \ ['sqcup'              , '‚äî'],
    \ ['sqsubset'           , '‚äè'],
    \ ['sqsubseteq'         , '‚äë'],
    \ ['sqsupset'           , '‚äê'],
    \ ['sqsupseteq'         , '‚äí'],
    \ ['subset'             , '‚äÇ'],
    \ ['Subset'             , '‚ãê'],
    \ ['subseteq'           , '‚äÜ'],
    \ ['subseteqq'          , '‚´Ö'],
    \ ['subsetneq'          , '‚ää'],
    \ ['subsetneqq'         , '‚´ã'],
    \ ['succapprox'         , '‚™∏'],
    \ ['succ'               , '‚âª'],
    \ ['succcurlyeq'        , '‚âΩ'],
    \ ['succeq'             , '‚™∞'],
    \ ['succnapprox'        , '‚™∫'],
    \ ['succneqq'           , '‚™∂'],
    \ ['succsim'            , '‚âø'],
    \ ['sum'                , '‚àë'],
    \ ['Supset'             , '‚ãë'],
    \ ['supseteq'           , '‚äá'],
    \ ['supseteqq'          , '‚´Ü'],
    \ ['supsetneq'          , '‚äã'],
    \ ['supsetneqq'         , '‚´å'],
    \ ['surd'               , '‚àö'],
    \ ['swarrow'            , '‚Üô'],
    \ ['therefore'          , '‚à¥'],
    \ ['times'              , '√ó'],
    \ ['to'                 , '‚Üí'],
    \ ['top'                , '‚ä§'],
    \ ['triangleleft'       , '‚ä≤'],
    \ ['trianglelefteq'     , '‚ä¥'],
    \ ['triangleq'          , '‚âú'],
    \ ['triangleright'      , '‚ä≥'],
    \ ['trianglerighteq'    , '‚äµ'],
    \ ['twoheadleftarrow'   , '‚Üû'],
    \ ['twoheadrightarrow'  , '‚Ü†'],
    \ ['uparrow'            , '‚Üë'],
    \ ['Uparrow'            , '‚áë'],
    \ ['updownarrow'        , '‚Üï'],
    \ ['Updownarrow'        , '‚áï'],
    \ ['varnothing'         , '‚àÖ'],
    \ ['vartriangle'        , '‚àÜ'],
    \ ['vdash'              , '‚ä¢'],
    \ ['vDash'              , '‚ä®'],
    \ ['Vdash'              , '‚ä©'],
    \ ['vdots'              , '‚ãÆ'],
    \ ['veebar'             , '‚äª'],
    \ ['vee'                , '‚à®'],
    \ ['Vvdash'             , '‚ä™'],
    \ ['wedge'              , '‚àß'],
    \ ['wr'                 , '‚âÄ']]

  for symbol in s:contextMathSymbols
    call s:ContextConcealSymbol('\\'.symbol[0].'\>', symbol[1])
  endfor

  " Greek Symbols: {{{2
  let s:contextGreekSymbols=[
    \ ['alpha'     , 'Œ±', ' ', ' '],
    \ ['beta'      , 'Œ≤', ' ', '·µ¶'],
    \ ['gamma'     , 'Œ≥', ' ', '·µß'],
    \ ['delta'     , 'Œ¥', ' ', ' '],
    \ ['epsilon'   , 'œµ', ' ', ' '],
    \ ['varepsilon', 'Œµ', ' ', ' '],
    \ ['zeta'      , 'Œ∂', ' ', ' '],
    \ ['eta'       , 'Œ∑', ' ', ' '],
    \ ['theta'     , 'Œ∏', ' ', ' '],
    \ ['vartheta'  , 'œë', ' ', ' '],
    \ ['kappa'     , 'Œ∫', ' ', ' '],
    \ ['lambda'    , 'Œª', ' ', ' '],
    \ ['mu'        , 'Œº', ' ', ' '],
    \ ['nu'        , 'ŒΩ', ' ', ' '],
    \ ['xi'        , 'Œæ', ' ', ' '],
    \ ['pi'        , 'œÄ', ' ', ' '],
    \ ['varpi'     , 'œñ', ' ', ' '],
    \ ['rho'       , 'œÅ', ' ', ' '],
    \ ['varrho'    , 'œ±', ' ', '·µ®'],
    \ ['sigma'     , 'œÉ', ' ', ' '],
    \ ['varsigma'  , 'œÇ', ' ', ' '],
    \ ['tau'       , 'œÑ', ' ', ' '],
    \ ['upsilon'   , 'œÖ', ' ', ' '],
    \ ['phi'       , 'œï', ' ', ' '],
    \ ['varphi'    , 'œÜ', ' ', '·µ©'],
    \ ['chi'       , 'œá', ' ', '·µ™'],
    \ ['psi'       , 'œà', ' ', ' '],
    \ ['omega'     , 'œâ', ' ', ' '],
    \ ['Gamma'     , 'Œì', ' ', ' '],
    \ ['Delta'     , 'Œî', ' ', ' '],
    \ ['Theta'     , 'Œò', ' ', ' '],
    \ ['Lambda'    , 'Œõ', ' ', ' '],
    \ ['Xi'        , 'Œß', ' ', ' '],
    \ ['Pi'        , 'Œ†', ' ', ' '],
    \ ['Sigma'     , 'Œ£', ' ', ' '],
    \ ['Upsilon'   , 'Œ•', ' ', ' '],
    \ ['Phi'       , 'Œ¶', ' ', ' '],
    \ ['Psi'       , 'Œ®', ' ', ' '],
    \ ['Omega'     , 'Œ©', ' ', ' ']]

  for symbol in s:contextGreekSymbols
    call s:ContextConcealSymbol('\\'.symbol[0].'\>', symbol[1])
    call s:ContextConcealScript('\\'.symbol[0].'\>', symbol[2], symbol[3])
  endfor

  " Printable Symbols: {{{2
  let s:contextPrintableSymbols=[
    \ ['0' , '‚Å∞', '‚ÇÄ'],
    \ ['1' , '¬π', '‚ÇÅ'],
    \ ['2' , '¬≤', '‚ÇÇ'],
    \ ['3' , '¬≥', '‚ÇÉ'],
    \ ['4' , '‚Å¥', '‚ÇÑ'],
    \ ['5' , '‚Åµ', '‚ÇÖ'],
    \ ['6' , '‚Å∂', '‚ÇÜ'],
    \ ['7' , '‚Å∑', '‚Çá'],
    \ ['8' , '‚Å∏', '‚Çà'],
    \ ['9' , '‚Åπ', '‚Çâ'],
    \ ['a' , '·µÉ', '‚Çê'],
    \ ['b' , '·µá', ' '],
    \ ['c' , '·∂ú', ' '],
    \ ['d' , '·µà', ' '],
    \ ['e' , '·µâ', '‚Çë'],
    \ ['f' , '·∂†', ' '],
    \ ['g' , '·µç', ' '],
    \ ['h' , ' ∞', ' '],
    \ ['i' , '‚Å±', '·µ¢'],
    \ ['j' , ' ≤', ' '],
    \ ['k' , '·µè', ' '],
    \ ['l' , 'À°', ' '],
    \ ['m' , '·µê', ' '],
    \ ['n' , '‚Åø', ' '],
    \ ['o' , '·µí', '‚Çí'],
    \ ['p' , '·µñ', ' '],
    \ ['q' , ' ', ' '],
    \ ['r' , ' ≥', ' '],
    \ ['s' , 'À¢', ' '],
    \ ['t' , '·µó', ' '],
    \ ['u' , '·µò', '·µ§'],
    \ ['v' , '·µõ', ' '],
    \ ['w' , ' ∑', ' '],
    \ ['x' , 'À£', ' '],
    \ ['y' , ' ∏', ' '],
    \ ['z' , '·∂ª', ' '],
    \ ['A' , '·¥¨', ' '],
    \ ['B' , '·¥Æ', ' '],
    \ ['C' , ' ', ' '],
    \ ['D' , '·¥∞', ' '],
    \ ['E' , '·¥±', ' '],
    \ ['F' , ' ', ' '],
    \ ['G' , '·¥≥', ' '],
    \ ['H' , '·¥¥', ' '],
    \ ['I' , '·¥µ', ' '],
    \ ['J' , '·¥∂', ' '],
    \ ['K' , '·¥∑', ' '],
    \ ['L' , '·¥∏', ' '],
    \ ['M' , '·¥π', ' '],
    \ ['N' , '·¥∫', ' '],
    \ ['O' , '·¥º', ' '],
    \ ['P' , '·¥æ', ' '],
    \ ['Q' , ' ', ' '],
    \ ['R' , '·¥ø', '·µ£'],
    \ ['S' , ' ', ' '],
    \ ['T' , '·µÄ', ' '],
    \ ['U' , '·µÅ', ' '],
    \ ['V' , ' ', '·µ•'],
    \ ['W' , '·µÇ', ' '],
    \ ['X' , ' ', '‚Çì'],
    \ ['Y' , ' ', ' '],
    \ ['Z' , ' ', ' ']]

  let s:contextSubscriptList=[
    \ ['+'        , '‚Çä'],
    \ ['-'        , '‚Çã'],
    \ ['/'        , 'Àè'],
    \ ['('        , '‚Çç'],
    \ [')'        , '‚Çé'],
    \ ['\.'       , '‚Ä∏']]

  let s:contextSuperscriptList=[
    \ ['+' , '‚Å∫'],
    \ ['-' , '‚Åª'],
    \ ['/' , 'Àä'],
    \ ['(' , '‚ÅΩ'],
    \ [')' , '‚Åæ'],
    \ ['<' , 'ÀÇ'],
    \ ['>' , 'ÀÉ'],
    \ ['\.', 'Àô'],
    \ ['=' , 'À≠']]

  for symbol in s:contextPrintableSymbols
    call s:ContextConcealScript(symbol[0], symbol[1], symbol[2])
  endfor

endif

" Typing: {{{1
" -------

"FIXME
syn cluster contextTypingGroup contains=contextComment

syn region  contextTyping     display matchgroup=contextCommand keepend start='\\type\z(\A\)'                 end='\z1'
syn region  contextTyping     display matchgroup=contextCommand keepend start='\\\%(type\?\|tex\|arg\|mat\){' end='}'

syn region  contextTyping             matchgroup=contextBlock   keepend start='\\start\z(\a*\)typing\>'       end='\\stop\z1typing\>' contains=contextComment

" Emphasize: {{{1
" ----------

"FIXME: contains
syn region  contextEmphasize  display matchgroup=contextCommand keepend start='\\emph{'            end='}'
syn region  contextEmphasize          matchgroup=contextBlock   keepend start='\\startemphasize\>' end='\\stopemphasize\>' contains=contextCommand,contextBlock

" Highlight Definitions: {{{1
" ======================

" Comments:
hi def link contextTodo       Todo
hi def link contextComment    Comment
hi def link contextHiding     contextComment

" Constants:
hi def link contextDimension  Constant
hi def link contextNumber     contextDimension

" Regions:
hi def link contextMath       String
hi def link contextTyping     String
hi def link contextMathText   Normal
hi          contextEmphasize  gui=italic

" Commands:
hi def link contextCommand    Function
hi def link contextBlock      Statement
hi def link contextHead       Keyword
hi def link contextCondition  Conditional

" Definitions:
hi def link contextDefine     Define
hi def link contextSetup      contextDefine
hi def link contextMode       contextDefine
hi def link contextInclude    Include

" Types:
hi def link contextFont       Type
hi def link contextStyle      Type
hi def link contextCapital    contextStyle

" Specials:
hi def link contextDelimiter  Delimiter
hi def link contextParameter  Identifier
hi def link contextSpecial    Special
hi def link contextEscaped    contextSpecial
hi def link contextLabel      Tag

" Conceal:
hi!    link Conceal           SpecialChar

" Finalize Syntaxfile: {{{1
" ====================

let b:current_syntax = "context"

let &cpo = s:cpo_save
unlet s:cpo_save

" vim: ts=8 nowrap fdm=marker
